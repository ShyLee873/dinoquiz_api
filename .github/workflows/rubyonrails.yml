name: Ruby on Rails CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    container: ruby:3.3.3 
    services:
      postgres:
        image: postgres:16-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/rails_test
      BUNDLE_PATH: vendor/bundle

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system packages needed by gems
        run: |
          apt-get update
          apt-get install -y --no-install-recommends build-essential libpq-dev git

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install bundle
        run: |
          gem install bundler -N
          bundle config set path "$BUNDLE_PATH"
          bundle install --jobs 4 --retry 3

      - name: Prepare database
        run: bundle exec rails db:prepare

      - name: Run RSpec
        run: bundle exec rspec

  lint:
    runs-on: ubuntu-latest
    container: ruby:3.3.3
    steps:
      - uses: actions/checkout@v4
      - run: |
          apt-get update
          apt-get install -y --no-install-recommends git
          gem install bundler -N
          bundle config set path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: RuboCop
        run: |
          if bundle exec rubocop -v >/dev/null 2>&1; then
            bundle exec rubocop --parallel
          else
            echo "RuboCop not in Gemfile; skipping."
          fi
